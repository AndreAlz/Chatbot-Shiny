library(DBI)
library(RMySQL)
library(xlsx)
#Funcion para conectar a la DB
connectMySQL<-function(){
# Seleccionar driver de trabajo
m = dbDriver("MySQL")
# Informacion de la DB
myHost <- "54.39.1.24"
myUsername = "root"
myDbname = "servicedesk"
myPort = 3306
myPassword = "sysserver02"
#Creacion del obj. de conexion
con = dbConnect(m, user= myUsername, host= myHost, password= myPassword, dbname= myDbname, port= myPort)
return(con)
}
#BOT V2.0
chatbot_proto<-function(){
#Obj. conexion a la DB
conn =connectMySQL()
print("Hola soy HDbot, puedo ayudarte con alguna consultas sobre tus tickets y la atencion")
while(TRUE){
print("En que te puedo ayudar en este momento")
print("1. consultar ticket")
print("2. consultar atencion")
print("0. dejar chat")
print("ingrese el numero de la opcion: ")
opcion=readline(prompt = "Opcion: ")
switch(opcion,
"1"={
ticket=readline("Genial, necesito tu numero de ticket: ")
consulta="select wo.WORKORDERID AS 'TICKET ID',
wo.TITLE AS 'ASUNTO',
aau.FIRST_NAME AS 'USUARIO',
ti.FIRST_NAME AS 'TECNICO',
rrs.RESOLUTION AS 'COMENTARIOS',
std.STATUSNAME AS 'ESTADO',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.CREATEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACREA',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.COMPLETEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACIERRE'
from WorkOrder  wo
LEFT JOIN RequestResolver rrr ON wo.WORKORDERID=rrr.REQUESTID
LEFT JOIN RequestResolution rrs ON rrr.REQUESTID=rrs.REQUESTID
LEFT JOIN WorkOrderStates wos ON wo.WORKORDERID=wos.WORKORDERID
LEFT JOIN SDUser sdu ON wo.REQUESTERID=sdu.USERID
LEFT JOIN AaaUser aau ON sdu.USERID=aau.USER_ID
LEFT JOIN SDUser td ON wos.OWNERID=td.USERID
LEFT JOIN AaaUser ti ON td.USERID=ti.USER_ID
LEFT JOIN StatusDefinition std ON wos.STATUSID=std.STATUSID
WHERE wo.WORKORDERID="
#Concatenamos el query con el ticket ingresado
sqlquery=paste(consulta,ticket,sep = " ")
#enviamos la consulta y luego la guardamos en la variable RESULT
res = dbSendQuery(conn, sqlquery)
result = dbFetch(res, 10)
cat("Hey encontre que el ticket ",result[1,1],"  fue creado por ",result[1,3]," el dia ", substr(result[1,7],1,10)," a las ",substr(result[1,7],11,20)," y fue antendido por ",result[1,4])
elect=readline(prompt = "quieres saber los comentarios y el estado: ")
switch (elect,
"si" = {
cat("Bueno lo que dijo el tecnico ",result[1,4], " fue: '",toString(result[1,5]),"'")
cat("Ademas su estado actual es: ", result[1,6])
},
"no" = {
print("Esta bien ;)")
}
)
},
"2"={
fecha=readline("Entonces necesito desde que fecha quieres la informacion: ")
consulta="select wo.WORKORDERID AS 'TICKET ID',
wo.TITLE AS 'ASUNTO',
aau.FIRST_NAME AS 'USUARIO',
ti.FIRST_NAME AS 'TECNICO',
rrs.RESOLUTION AS 'COMENTARIOS',
std.STATUSNAME AS 'ESTADO',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.CREATEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACREA',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.COMPLETEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACIERRE'
from WorkOrder  wo
LEFT JOIN RequestResolver rrr ON wo.WORKORDERID=rrr.REQUESTID
LEFT JOIN RequestResolution rrs ON rrr.REQUESTID=rrs.REQUESTID
LEFT JOIN WorkOrderStates wos ON wo.WORKORDERID=wos.WORKORDERID
LEFT JOIN SDUser sdu ON wo.REQUESTERID=sdu.USERID
LEFT JOIN AaaUser aau ON sdu.USERID=aau.USER_ID
LEFT JOIN SDUser td ON wos.OWNERID=td.USERID
LEFT JOIN AaaUser ti ON td.USERID=ti.USER_ID
LEFT JOIN StatusDefinition std ON wos.STATUSID=std.STATUSID
WHERE FROM_UNIXTIME(wo.CREATEDTIME/1000) BETWEEN ' "
consultap2="00:00:00'  AND NOW() "
#Concatenamos el query con el ticket ingresado
sqlquery=paste(consulta,fecha,consultap2,sep = " ")
#enviamos la consulta y luego la guardamos en la variable RESULT
res = dbSendQuery(conn, sqlquery)
result = dbFetch(res, 10)
cat("lo que encontre fue esto:")
print(result)
},
"0"={
print("Bueno nos vemos mas tarde")
break;
}
)
}
}
chatbot_proto()
chatbot_proto()
chatbot_proto()
library(DBI)
library(RMySQL)
library(xlsx)
#Funcion para conectar a la DB
connectMySQL<-function(){
# Seleccionar driver de trabajo
m = dbDriver("MySQL")
# Informacion de la DB
myHost <- "54.39.1.24"
myUsername = "root"
myDbname = "servicedesk"
myPort = 3306
myPassword = "sysserver02"
#Creacion del obj. de conexion
con = dbConnect(m, user= myUsername, host= myHost, password= myPassword, dbname= myDbname, port= myPort)
return(con)
}
#BOT V2.0
chatbot_proto<-function(){
#Obj. conexion a la DB
conn =connectMySQL()
print("Hola soy HDbot, puedo ayudarte con alguna consultas sobre tus tickets y la atencion")
while(TRUE){
print("En que te puedo ayudar en este momento")
print("1. consultar ticket")
print("2. consultar atencion")
print("0. dejar chat")
print("ingrese el numero de la opcion: ")
opcion=readline(prompt = "Opcion: ")
switch(opcion,
"1"={
ticket=readline("Genial, necesito tu numero de ticket: ")
consulta="select wo.WORKORDERID AS 'TICKET ID',
wo.TITLE AS 'ASUNTO',
aau.FIRST_NAME AS 'USUARIO',
ti.FIRST_NAME AS 'TECNICO',
rrs.RESOLUTION AS 'COMENTARIOS',
std.STATUSNAME AS 'ESTADO',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.CREATEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACREA',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.COMPLETEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACIERRE'
from WorkOrder  wo
LEFT JOIN RequestResolver rrr ON wo.WORKORDERID=rrr.REQUESTID
LEFT JOIN RequestResolution rrs ON rrr.REQUESTID=rrs.REQUESTID
LEFT JOIN WorkOrderStates wos ON wo.WORKORDERID=wos.WORKORDERID
LEFT JOIN SDUser sdu ON wo.REQUESTERID=sdu.USERID
LEFT JOIN AaaUser aau ON sdu.USERID=aau.USER_ID
LEFT JOIN SDUser td ON wos.OWNERID=td.USERID
LEFT JOIN AaaUser ti ON td.USERID=ti.USER_ID
LEFT JOIN StatusDefinition std ON wos.STATUSID=std.STATUSID
WHERE wo.WORKORDERID="
#Concatenamos el query con el ticket ingresado
sqlquery=paste(consulta,ticket,sep = " ")
#enviamos la consulta y luego la guardamos en la variable RESULT
res = dbSendQuery(conn, sqlquery)
result = dbFetch(res, 10)
cat("Hey encontre que el ticket ",result[1,1],"  fue creado por ",result[1,3]," el dia ", substr(result[1,7],1,10)," a las ",substr(result[1,7],11,20)," y fue antendido por ",result[1,4])
elect=readline(prompt = "quieres saber los comentarios y el estado: ")
switch (elect,
"si" = {
cat("Bueno lo que dijo el tecnico ",result[1,4], " fue: '",toString(result[1,5]),"'")
cat("Ademas su estado actual es: ", result[1,6])
},
"no" = {
print("Esta bien ;)")
}
)
},
"2"={
fecha=readline("Entonces necesito desde que fecha quieres la informacion: ")
consulta="select wo.WORKORDERID AS 'TICKET ID',
wo.TITLE AS 'ASUNTO',
aau.FIRST_NAME AS 'USUARIO',
ti.FIRST_NAME AS 'TECNICO',
std.STATUSNAME AS 'ESTADO',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.CREATEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACREA',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.COMPLETEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACIERRE'
from WorkOrder  wo
LEFT JOIN RequestResolver rrr ON wo.WORKORDERID=rrr.REQUESTID
LEFT JOIN RequestResolution rrs ON rrr.REQUESTID=rrs.REQUESTID
LEFT JOIN WorkOrderStates wos ON wo.WORKORDERID=wos.WORKORDERID
LEFT JOIN SDUser sdu ON wo.REQUESTERID=sdu.USERID
LEFT JOIN AaaUser aau ON sdu.USERID=aau.USER_ID
LEFT JOIN SDUser td ON wos.OWNERID=td.USERID
LEFT JOIN AaaUser ti ON td.USERID=ti.USER_ID
LEFT JOIN StatusDefinition std ON wos.STATUSID=std.STATUSID
WHERE FROM_UNIXTIME(wo.CREATEDTIME/1000) BETWEEN ' "
consultap2="00:00:00'  AND NOW() "
#Concatenamos el query con el ticket ingresado
sqlquery=paste(consulta,fecha,consultap2,sep = " ")
#enviamos la consulta y luego la guardamos en la variable RESULT
res = dbSendQuery(conn, sqlquery)
result = dbFetch(res, 10)
print(result)
},
"0"={
print("Bueno nos vemos mas tarde")
break;
}
)
}
}
chatbot_proto()
chatbot_proto()
function(x)
processingData <- function(){
getwd()
setwd('~/shinybot')
library(xlsx)
batch1=read.xlsx('~/shinybot/batch.xlsx' , sheetIndex =1)
batch2=read.xlsx('~/shinybot/batch.xlsx' , sheetIndex =2)
trend1=trend2=GE=GC=matrix(NA,nrow = nrow(batch1),ncol = 1)
for (i in 1:nrow(batch1)) {
data =data.frame(Word=character(), stringsAsFactors = FALSE)
temp=strsplit(toString(batch1[i,1]),split = " ")
ntemp=unlist(temp)
for (j in 1:length(ntemp)) {
data[j,1]=ntemp[j]
}
t1=1
t2=1
for (k in 1:nrow(batch2)) {
for (l in 1:nrow(data)) {
if (identical(data[l,1],toString(batch2[k,1]))==TRUE) {
t1=t1*batch2[k,2]
t2=t2*batch2[k,3]
}
}
}
trend1[i,1]=t1
trend2[i,1]=t2
if (t1>t2) {
GE[i,1]=(t1-t2)/(t1+t2)
}
if (t1<t2) {
GE[i,1]=(t2-t1)/(t1+t2)
}
if (t1==t2){
GE[i,1]=0
}
GC[i,1]=1-GE[i,1]
t1=1
t2=1
}
finalbatch=cbind(batch1,trend1,trend2,GE,GC)
return(finalbatch)
}
final = processingData()
View(final)
final_n=function(final){((final-min(final))/(max(final)-min(final)))}
final_n
final_n<-function(final){((final-min(final))/(max(final)-min(final)))}
View(final_n)
View(final_n)
View(final)
View(final)
danaAna_n=as.data.frame(lapply(final[,3:6],final_n))
danaAna_n
danaAna_n$Resultado=final$Resultado
danaAna_n
danaAna_n$Resultado=as.factor(danaAna_n$Resultado)
set.seed(6666)
danaAna_n
View(danaAna_n)
modelo_knn = train(danaAna_n[,1:4],danaAna_n[,5], method = 'knn')
library(caret)
modelo_knn = train(danaAna_n[,1:4],danaAna_n[,5], method = 'knn')
source("crcoan.R")
F=processingData()
shiny::runApp()
