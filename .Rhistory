return(con)
}
#BOT V2.0
chatbot_proto<-function(){
#Obj. conexion a la DB
conn =connectMySQL()
print("Hola soy HDbot, puedo ayudarte con alguna consultas sobre tus tickets y la atencion")
while(TRUE){
print("En que te puedo ayudar en este momento")
print("1. consultar ticket")
print("2. consultar atencion")
print("0. dejar chat")
print("ingrese el numero de la opcion: ")
opcion=readline(prompt = "Opcion: ")
switch(opcion,
"1"={
ticket=readline("Genial, necesito tu numero de ticket: ")
consulta="select wo.WORKORDERID AS 'TICKET ID',
wo.TITLE AS 'ASUNTO',
aau.FIRST_NAME AS 'USUARIO',
ti.FIRST_NAME AS 'TECNICO',
rrs.RESOLUTION AS 'COMENTARIOS',
std.STATUSNAME AS 'ESTADO',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.CREATEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACREA',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.COMPLETEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACIERRE'
from WorkOrder  wo
LEFT JOIN RequestResolver rrr ON wo.WORKORDERID=rrr.REQUESTID
LEFT JOIN RequestResolution rrs ON rrr.REQUESTID=rrs.REQUESTID
LEFT JOIN WorkOrderStates wos ON wo.WORKORDERID=wos.WORKORDERID
LEFT JOIN SDUser sdu ON wo.REQUESTERID=sdu.USERID
LEFT JOIN AaaUser aau ON sdu.USERID=aau.USER_ID
LEFT JOIN SDUser td ON wos.OWNERID=td.USERID
LEFT JOIN AaaUser ti ON td.USERID=ti.USER_ID
LEFT JOIN StatusDefinition std ON wos.STATUSID=std.STATUSID
WHERE wo.WORKORDERID="
#Concatenamos el query con el ticket ingresado
sqlquery=paste(consulta,ticket,sep = " ")
#enviamos la consulta y luego la guardamos en la variable RESULT
res = dbSendQuery(conn, sqlquery)
result = dbFetch(res, 10)
cat("Hey encontre que el ticket ",result[1,1],"  fue creado por ",result[1,3]," el dia ", substr(result[1,7],1,10)," a las ",substr(result[1,7],11,20)," y fue antendido por ",result[1,4])
elect=readline(prompt = "quieres saber los comentarios y el estado: ")
switch (elect,
"si" = {
cat("Bueno lo que dijo el tecnico ",result[1,4], " fue: '",toString(result[1,5]),"'")
cat("Ademas su estado actual es: ", result[1,6])
},
"no" = {
print("Esta bien ;)")
}
)
},
"2"={
fecha=readline("Entonces necesito desde que fecha quieres la informacion: ")
consulta="select wo.WORKORDERID AS 'TICKET ID',
wo.TITLE AS 'ASUNTO',
aau.FIRST_NAME AS 'USUARIO',
ti.FIRST_NAME AS 'TECNICO',
rrs.RESOLUTION AS 'COMENTARIOS',
std.STATUSNAME AS 'ESTADO',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.CREATEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACREA',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.COMPLETEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACIERRE'
from WorkOrder  wo
LEFT JOIN RequestResolver rrr ON wo.WORKORDERID=rrr.REQUESTID
LEFT JOIN RequestResolution rrs ON rrr.REQUESTID=rrs.REQUESTID
LEFT JOIN WorkOrderStates wos ON wo.WORKORDERID=wos.WORKORDERID
LEFT JOIN SDUser sdu ON wo.REQUESTERID=sdu.USERID
LEFT JOIN AaaUser aau ON sdu.USERID=aau.USER_ID
LEFT JOIN SDUser td ON wos.OWNERID=td.USERID
LEFT JOIN AaaUser ti ON td.USERID=ti.USER_ID
LEFT JOIN StatusDefinition std ON wos.STATUSID=std.STATUSID
WHERE FROM_UNIXTIME(wo.CREATEDTIME/1000) BETWEEN ' "
consultap2="00:00:00'  AND NOW() "
#Concatenamos el query con el ticket ingresado
sqlquery=paste(consulta,fecha,consultap2,sep = " ")
#enviamos la consulta y luego la guardamos en la variable RESULT
res = dbSendQuery(conn, sqlquery)
result = dbFetch(res, 10)
cat("lo que encontre fue esto:")
print(result)
},
"0"={
print("Bueno nos vemos mas tarde")
break;
}
)
}
}
chatbot_proto()
chatbot_proto()
chatbot_proto()
library(DBI)
library(RMySQL)
library(xlsx)
#Funcion para conectar a la DB
connectMySQL<-function(){
# Seleccionar driver de trabajo
m = dbDriver("MySQL")
# Informacion de la DB
myHost <- "54.39.1.24"
myUsername = "root"
myDbname = "servicedesk"
myPort = 3306
myPassword = "sysserver02"
#Creacion del obj. de conexion
con = dbConnect(m, user= myUsername, host= myHost, password= myPassword, dbname= myDbname, port= myPort)
return(con)
}
#BOT V2.0
chatbot_proto<-function(){
#Obj. conexion a la DB
conn =connectMySQL()
print("Hola soy HDbot, puedo ayudarte con alguna consultas sobre tus tickets y la atencion")
while(TRUE){
print("En que te puedo ayudar en este momento")
print("1. consultar ticket")
print("2. consultar atencion")
print("0. dejar chat")
print("ingrese el numero de la opcion: ")
opcion=readline(prompt = "Opcion: ")
switch(opcion,
"1"={
ticket=readline("Genial, necesito tu numero de ticket: ")
consulta="select wo.WORKORDERID AS 'TICKET ID',
wo.TITLE AS 'ASUNTO',
aau.FIRST_NAME AS 'USUARIO',
ti.FIRST_NAME AS 'TECNICO',
rrs.RESOLUTION AS 'COMENTARIOS',
std.STATUSNAME AS 'ESTADO',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.CREATEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACREA',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.COMPLETEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACIERRE'
from WorkOrder  wo
LEFT JOIN RequestResolver rrr ON wo.WORKORDERID=rrr.REQUESTID
LEFT JOIN RequestResolution rrs ON rrr.REQUESTID=rrs.REQUESTID
LEFT JOIN WorkOrderStates wos ON wo.WORKORDERID=wos.WORKORDERID
LEFT JOIN SDUser sdu ON wo.REQUESTERID=sdu.USERID
LEFT JOIN AaaUser aau ON sdu.USERID=aau.USER_ID
LEFT JOIN SDUser td ON wos.OWNERID=td.USERID
LEFT JOIN AaaUser ti ON td.USERID=ti.USER_ID
LEFT JOIN StatusDefinition std ON wos.STATUSID=std.STATUSID
WHERE wo.WORKORDERID="
#Concatenamos el query con el ticket ingresado
sqlquery=paste(consulta,ticket,sep = " ")
#enviamos la consulta y luego la guardamos en la variable RESULT
res = dbSendQuery(conn, sqlquery)
result = dbFetch(res, 10)
cat("Hey encontre que el ticket ",result[1,1],"  fue creado por ",result[1,3]," el dia ", substr(result[1,7],1,10)," a las ",substr(result[1,7],11,20)," y fue antendido por ",result[1,4])
elect=readline(prompt = "quieres saber los comentarios y el estado: ")
switch (elect,
"si" = {
cat("Bueno lo que dijo el tecnico ",result[1,4], " fue: '",toString(result[1,5]),"'")
cat("Ademas su estado actual es: ", result[1,6])
},
"no" = {
print("Esta bien ;)")
}
)
},
"2"={
fecha=readline("Entonces necesito desde que fecha quieres la informacion: ")
consulta="select wo.WORKORDERID AS 'TICKET ID',
wo.TITLE AS 'ASUNTO',
aau.FIRST_NAME AS 'USUARIO',
ti.FIRST_NAME AS 'TECNICO',
std.STATUSNAME AS 'ESTADO',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.CREATEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACREA',
DATE_FORMAT(TIMESTAMPADD(Second,TIMESTAMPDIFF(SECOND,UTC_TIMESTAMP(),now())+(wo.COMPLETEDTIME/1000),'1970-01-01 00:00:00'),'%Y-%m-%d %h:%i:%s')AS 'FECHACIERRE'
from WorkOrder  wo
LEFT JOIN RequestResolver rrr ON wo.WORKORDERID=rrr.REQUESTID
LEFT JOIN RequestResolution rrs ON rrr.REQUESTID=rrs.REQUESTID
LEFT JOIN WorkOrderStates wos ON wo.WORKORDERID=wos.WORKORDERID
LEFT JOIN SDUser sdu ON wo.REQUESTERID=sdu.USERID
LEFT JOIN AaaUser aau ON sdu.USERID=aau.USER_ID
LEFT JOIN SDUser td ON wos.OWNERID=td.USERID
LEFT JOIN AaaUser ti ON td.USERID=ti.USER_ID
LEFT JOIN StatusDefinition std ON wos.STATUSID=std.STATUSID
WHERE FROM_UNIXTIME(wo.CREATEDTIME/1000) BETWEEN ' "
consultap2="00:00:00'  AND NOW() "
#Concatenamos el query con el ticket ingresado
sqlquery=paste(consulta,fecha,consultap2,sep = " ")
#enviamos la consulta y luego la guardamos en la variable RESULT
res = dbSendQuery(conn, sqlquery)
result = dbFetch(res, 10)
print(result)
},
"0"={
print("Bueno nos vemos mas tarde")
break;
}
)
}
}
chatbot_proto()
chatbot_proto()
shiny::runApp('direct')
runApp('direct')
runApp('direct')
library(stringr)
shiny::runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
shiny::runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
tabledata=read_excel("~/libro1.xlsx",1)
tabledata
DT=data.table(t(tabledata))
DT
query=paste('INSERT INTO catalogo(nombre, campa, anexo, cel)\nVALUES\n',
gsub('"',"'",gsub('c','',(DT[,paste(.SD,",",collapse='\n')]))))
query
query=paste('INSERT INTO catalogo(nombre, campa, anexo, cel) VALUES ',
gsub('"',"'",gsub('c','',(DT[,paste(.SD,",")]))))
qery
query
query=paste('INSERT INTO catalogo(nombre, campa, anexo, cel)\nVALUES\n',
gsub('"',"'",gsub('c','',(DT[,paste(.SD,",",collapse='\n')]))))
cat(query)
tama=str_length(query);
str_sub(query,tama)=";";
cat(query)
conn=connectMySQL()
res=dbSendQuery(conn,query)
result = dbFetch(res,n=-1)
result
res
res=dbSendQuery(conn,query)
dbClearResult(res)
dbDisconnect(conn)
DT
query=paste('INSERT INTO catalogo(nombre, campa, anexo, cel)\nVALUES\n',
gsub('"',"'",gsub('c','',(DT[,paste(.SD,",",collapse='\n')]))))
tama=str_length(query);
str_sub(query,tama)=";";
cat(QUERY)
cat(query)
conn=connectMySQL()
res=dbSendQuery(conn,query)
result = dbFetch(res,n=-1)
result
dbClearResult(res)
consultaquery2="select * from catalogo"
res = dbSendQuery(conn, consultaquery2)
result = dbFetch(res,n=-1)
datafinal<<-result
datafinal
query=paste('INSERT INTO catalogo(nombre, campa, anexo, cel)\nVALUES\n',
gsub('"',"'",gsub('c','',(DT[,paste(.SD,",",collapse='\n')]))))
tama=str_length(query);
str_sub(query,tama)=";";
res=dbSendQuery(conn,query)
result = dbFetch(res,n=-1)
datafinal<<-result
datafinal
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
conn=connectMySQL()
res = dbSendQuery(conn, "select * from catalogo")
datafinal = dbFetch(res,n=-1)
dbClearResult(res)
dbDisconnect(conn)
View(datafinal)
1234=datafinal[,4]
if(1234==datafinal[,4]){}
if(1234==datafinal[,4]){print("hola")}
matrix(nrow = 2, ncol = 2)
matrix(nrow = 2, ncol = 1)
a=matrix(nrow = 2, ncol = 1)
a[,1]=1234
a
if(a==datafinal[,4]){print("hola")}
match(2,datafinal[,4],nomatch = 0)
match(1234,datafinal[,4],nomatch = 0)
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
a=matrix(nrow = 3,nrow(1))
a=matrix(nrow = 3,ncol = (1))
a=
a
a[,1]=1235
a[,1]=1234
match(a,datafinal[,4])
match(datafinal[,4],a)
runApp('direct')
shiny::runApp('direct')
shinyUI(
fluidPage(
uiOutput
)
)
shiny::runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
shiny::runApp('direct')
shiny::runApp('direct')
runApp('direct')
shiny::runApp('direct')
bplantilla
runApp('direct')
runApp('direct')
a="hola"
b="pedro"
if(a=="perro" || b=="pedro"){print(a)}
a=""
if(a=="perro" || b=="pedro"){print("hola")}
if(a=="" || b=="pero"){print("hola")}
shiny::runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
if(a=="" && b=="pero"){print("hola")}
a=""
b
if(a=="" && b=="pedro"){print("hola")}
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
shiny::runApp('direct')
r=read_excel(path = "~/Documents/base.xlsx", sheet = 1)
r=read_excel(path = "C:/Users/practicante/Documents/base.xlsx", sheet = 1)
View(r)
r
r[1,1]
filei=t(as.numeric(unlist(r[,3])));
filei
length(filei)
if(flag==0){
consulta1="insert into catalogo(nombre, campa, anexo, cel, sede,cargo) value ('"
consulta2="', '"
consulta3="')"
query=paste(consulta1,
fileb[i,1],consulta2,fileb[i,2],
consulta2,fileb[i,3],consulta2,fileb[i,4],
consulta2,fileb[i,5],consulta2,fileb[i,6],
consulta3,sep = "")
# DT=data.table(t(fileb[i,]))
# query=paste('INSERT INTO catalogo(nombre, campa, anexo, cel,sede,cargo)\nVALUES\n',
#             gsub('"',"'",gsub('c','',(DT[,paste(.SD,",",collapse='\n')]))))
# tama=str_length(query);
# str_sub(query,tama)=";";
res=dbSendQuery(conn,query)
dbClearResult(res)
}
runApp('direct')
length(r)
r=read_excel(path = "C:/Users/practicante/Documents/base.xlsx", sheet = 1)
length(r)
DT=data.table(t(r))
DT
DT=data.table(r)
DT
DT[1,1]
length(DT[,4])
length(DT[4,])
length(DT[4,1])
DT[4,1]
filei=t(as.numeric(unlist(DT[,3])));
filei
length(filei)
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
runApp('direct')
toString(filei[1,i]
toString(filei[1,i])
toString(filei[1,1])
toString(filei[1,2])
conn=connectMySQL()
consultaquery="select anexo from catalogo"
resu = dbSendQuery(conn, consultaquery)
sqlb = dbFetch(resu,n=-1)
toString(sqlb[1,4])
toString(sqlb[2,4])
toString(sqlb[4,1])
sqlb
runApp('direct')
flag=1
flag=0
runApp('direct')
runApp('direct')
runApp('direct')
conn=conne
consultaquery="select anexo from catalogo"
resu = dbSendQuery(conn, consultaquery)
sqlb = dbFetch(resu,n=-1)
conn=connectMySQL()
consultaquery="select anexo from catalogo"
resu = dbSendQuery(conn, consultaquery)
sqlb = dbFetch(resu,n=-1)
length(sqlb)
length(sqlb[,1])
runApp('direct')
d=matrix(nrow = 0, ncol = 6)
d
View(sqlb)
clear
r=read_excel(path = "C:/Users/practicante/Documents", sheet = 1)
r=read_excel(path = "C:/Users/practicante/Documents/base.xlsx", sheet = 1)
r
d=rbind(d,r[1,])
d
d=rbind(d,r[3,])
d
runApp('direct')
runApp('direct')
runApp('direct')
shiny::runApp('shinybot')
runApp('shinybot')
fina=processingData()
mknn=creaModelknn()
source("crcoan.R")
setwd("~/shinybot")
fina=processingData()
fina=processingData()
fina=processingData()
fina=processingData()
fina=processingData()
fina=processingData()
source("crcoan.R")
fina=processingData()
fina
runApp()
write.xlsx(fina,"C:/Users/practicante/Documents/shinybot" )
write.xlsx(fina,"C:/Users/practicante/Documents/shinybot/resultado.xlsx" )
ata=read.xlsx("C:/Users/practicante/Documents/shinybot/resultado.xlsx" , sheetIndex = 1)
data=read.xlsx("C:/Users/practicante/Documents/shinybot/resultado.xlsx" , sheetIndex = 1)
clear
runApp()
library(shiny)
library(caret)
library(DBI)
library(RMySQL)
library(xlsx)
source("crcoan.R")
runApp()
runApp()
source("crcoan.R")
runApp()
creaModelknn <- function(){
data=read.xlsx('~/resultado.xlsx' , sheetIndex = 1)
data$Resultado=as.factor(data$Resultado)
set.seed(6666)
modelo_knn = train(data[,3:6],data[,2], method = 'knn')
return(modelo_knn)
}
mknn=creaModelknn()
setwd("~/shinybot")
mknn=creaModelknn()
data=read.xlsx('~/resultado.xlsx' , sheetIndex = 1)
data=read.xlsx('~/resultado.xlsx' , sheetIndex = 1)
data=read.xlsx('~/resultado.xlsx' , sheetIndex = 1)
data=read.xlsx('~/resultado.xlsx' , sheetIndex = 1)
data=read.xlsx('~/resultado.xlsx' , sheetIndex = 1)
data=read.xlsx('~/shinybot/resultado.xlsx' , sheetIndex = 1)
View(data)
print(data)
source("crcoan.R")
mknn=creaModelknn()
setwd("~/shinybot")
mknn=creaModelknn()
